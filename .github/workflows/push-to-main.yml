name: Commit changed sources to main

on:
  push:
    branches:
      - generated

jobs:
  push-to-main:
    # depending on default permission settings for your org (contents being read-only or read-write for workloads), you will have to add permissions
    # see: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#modifying-the-permissions-for-the-github_token
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of CICD_GITHUB_TOKEN
          token: ${{ secrets.CICD_GITHUB_TOKEN}}
      - name: Push changes to main
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          CICD_GITHUB_TOKEN: ${{ secrets.CICD_GITHUB_TOKEN }}
        if: ${{ ! startsWith(github.actor, 'cicd') }}
        run: |
          echo "CICD triggered by: $GITHUB_ACTOR"
          echo "commit message: $COMMIT_MESSAGE"
          git fetch origin main:main --force
          MAIN_VERSION=`git show main:version`
          THIS_VERSION=`cat version`
          echo "main version: $MAIN_VERSION"
          echo "this version (branch generated): $THIS_VERSION"
          if [[ "$MAIN_VERSION" = "$THIS_VERSION" ]]
          then
             echo ""
             echo "=================="
             echo "Increasing version"
             echo "=================="
             echo ""
             VERSION=`echo $MAIN_VERSION | sed 's#[0-9]*$##'``echo $MAIN_VERSION+1 | sed "s#^.*\.##" | bc -l`
             echo "New version: $VERSION"
          else
             VERSION=$THIS_VERSION          
             echo "Using version: $VERSION"
          fi
          git fetch origin main:main --force
          git remote set-url origin https://k-pipe:$CICD_GITHUB_TOKEN@github.com/k-pipe/pipeline-operator.git
          git config --global user.email "cicd@k-pipe.cloud"
          git config --global user.name "cicd"
          # move folder with code
          mv internal/controller .
          # go to branch "main", this will keep the folder "controller"
          git checkout main
          # remove all files except operator folder
          rm -r source/controller
          # move controller folder
          mv controller source/
          # add version
          echo "Setting version in main: $VERSION"
          echo $VERSION > version
          # add all files to git
          git add -A .
          # commit and push
          git commit -m "$COMMIT_MESSAGE"
          git push --set-upstream origin main