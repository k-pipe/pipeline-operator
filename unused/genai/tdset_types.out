Here is the Go type definition for the custom resource definition `TDSet`:
```go
// +kubebuilder:validation:Image:length(1,256);required
type TDSet struct {
    Container struct {
        // +kubebuilder:validation:Port:type=int;minimum=0;maximum=65535;required
        Image  string
        Port   int
    }
    Service struct {
        // +kubebuilder:validation:Port:type=int;minimum=0;maximum=65535;required
        Port int
    }
    Scheduling struct {
        // +kubebuilder:validation:StartTime:type=int;minimum=0;maximum=23;required
        StartTime int `json:"startTime"`

        // +kubebuilder:validation:EndTime:type=int;minimum=0;maximum=23;required
        EndTime int `json:"endTime"`

        // +kubebuilder:validation:Replica:type=int;minimum=0;required
        Replica int `json:"replica"`
    }
}
```
Here's a brief explanation of the code:

* The `TDSet` struct is defined, which contains three inner structs: `Container`, `Service`, and `Scheduling`.
* Inside each struct, there are fields with specific types and validation constraints. For example:
	+ In the `Container` struct, the `Image` field has a length constraint of 1-256 characters.
	+ In the `Scheduling` struct, the `StartTime` and `EndTime` fields have minimum and maximum values of 0 and 23, respectively. The `Replica` field has no maximum value specified, but is still required.

Note that I used the `json:"field"` syntax to specify the JSON field name for each Go field. This is not strictly necessary, but it can be helpful when working with JSON data.

Also, keep in mind that this code defines a custom resource definition, which is specific to Kubernetes and Kubebuilder. If you're not familiar with these tools, you may want to start by reading the official documentation: <https://kubernetes.io/docs/concepts/abstractions/types/> and <https://github.com/kubernetes-sigs/kubebuilder>.

